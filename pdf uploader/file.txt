use mydb;
show tables;



CREATE TABLE sub_table (
    sub_code VARCHAR(20) PRIMARY KEY,
    sub_name VARCHAR(255) NOT NULL,
    credits FLOAT NOT NULL
);

CREATE TABLE academicyear (
    academic_id int PRIMARY KEY,         -- Unique ID for each academic year
    academic_year VARCHAR(15) NOT NULL   -- Academic year range in "YYYY-YYYY" format
);

CREATE TABLE year_table (
    academic_id INT NOT NULL,          -- Represents the batch ID (e.g., 16, 17, 18)
    year INT NOT NULL,                 -- The specific year (e.g., 2016, 2017, etc.)
    branch VARCHAR(10) NOT NULL,       -- The branch (e.g., CSE, ECE, EEE, CSM, MECH)
    year_code VARCHAR(15) NOT NULL,    -- Year code (e.g., 161CSE, 172EEE, 183MECH)
    PRIMARY KEY (year_code),           -- Making year_code the primary key
    FOREIGN KEY (academic_id) REFERENCES AcademicYear(academic_id) ON DELETE CASCADE -- To link with AcademicYear table
);

CREATE TABLE sem_table (
    sem_id INT PRIMARY KEY,
    sem VARCHAR(10) NOT NULL
);

INSERT INTO sem_table (sem_id, sem) VALUES
(11, '1-1'),
(12, '1-2'),
(21, '2-1'),
(22, '2-2'),
(31, '3-1'),
(32, '3-2'),
(41, '4-1'),
(42, '4-2');


CREATE TABLE year_sem (
    year_code varchar(15),
    sem_id INT,
    PRIMARY KEY (year_code, sem_id),
    FOREIGN KEY (year_code) REFERENCES year_table(year_code) ON DELETE CASCADE,
    FOREIGN KEY (sem_id) REFERENCES sem_table(sem_id) ON DELETE CASCADE
);

CREATE TABLE student_table (
    student_regno VARCHAR(20) NOT NULL PRIMARY KEY, -- Registration number as primary key
    academic_id INT NOT NULL,                       -- Foreign key from AcademicYear table
    branch VARCHAR(10) NOT NULL,                   -- Branch name
    FOREIGN KEY (academic_id) REFERENCES AcademicYear(academic_id)
        ON DELETE CASCADE                           -- Cascade deletes to handle academic year deletions
        ON UPDATE CASCADE                           -- Cascade updates to maintain referential integrity
);

CREATE TABLE sub_table (
    sub_code VARCHAR(20) PRIMARY KEY,
    sub_name VARCHAR(255) NOT NULL,
    credits FLOAT NOT NULL
);


CREATE TABLE semsub_table (
    sem_id INT,
    sub_code VARCHAR(10),
    PRIMARY KEY (sem_id, sub_code),
    FOREIGN KEY (sem_id) REFERENCES sem_table(sem_id),
    FOREIGN KEY (sub_code) REFERENCES sub_table(sub_code)
);



CREATE TABLE result_table (
    result_id INT AUTO_INCREMENT PRIMARY KEY, -- Primary key with auto-increment
    student_regno VARCHAR(20),               -- Foreign key from student_table
    sub_code VARCHAR(20),                    -- Foreign key from sub_table
    result_grade VARCHAR(10) NOT NULL,       -- Result grade
    internals INT NOT NULL, 
    credits INT,                     -- Internals marks
    FOREIGN KEY (student_regno) REFERENCES student_table(student_regno)
        ON DELETE CASCADE                    -- Cascade delete when the student is deleted
        ON UPDATE CASCADE,                   -- Cascade update for referential integrity
    FOREIGN KEY (sub_code) REFERENCES sub_table(sub_code)
        ON DELETE CASCADE                    -- Cascade delete when the subject is deleted
        ON UPDATE CASCADE                    -- Cascade update for referential integrity
);









select * from result_table;
drop table results;
ALTER TABLE results MODIFY grade VARCHAR(50);


SELECT DISTINCT st.student_regno, rt.sub_code, rt.result_grade, rt.internals
FROM student_table st
INNER JOIN result_table rt
ON st.student_regno = rt.student_regno
WHERE st.student_regno = '226M1A0549';

SELECT DISTINCT st.student_regno, st.academic_id, st.branch, rt.credits,
                  rt.sub_code, s.sub_name, rt.result_grade, rt.internals
FROM student_table st
INNER JOIN result_table rt
ON st.student_regno = rt.student_regno
INNER JOIN sub_table s
ON rt.sub_code = s.sub_code
WHERE st.student_regno = '226M1A0549';

SELECT * FROM sub_table where sub_name = "NETWORK ANALYSIS";


SELECT * FROM result_table;
SELECT * FROM year_sem;
SELECT * FROM semsub_table; 
SELECT * FROM year_table;
SELECT * FROM student_table;
SELECT * FROM academicyear;
SELECT * FROM sem_table;
SELECT * FROM sub_table;


SET SQL_SAFE_UPDATES = 1;

DELETE FROM result_table;
DELETE FROM year_sem;
DELETE FROM semsub_table; 
DELETE FROM year_table;
DELETE FROM student_table;
DELETE FROM academicyear;
DELETE FROM sub_table;


drop table result_table;
drop table year_sem;
drop table semsub_table; 
drop table year_table;
drop table student_table;
drop table academicyear;
drop table sem_table;
drop table sub_table;


drop table results;
show tables;
